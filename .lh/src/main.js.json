{
    "sourceFile": "src/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1730299699660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730302820248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,8 @@\n+import Vue from 'vue'\n+import App from './App.vue'\n+\n+Vue.config.productionTip = false\n+\n+new Vue({\n+  render: h => h(App),\n+}).$mount('#app')\n"
                },
                {
                    "date": 1730303648264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import Vue from 'vue'\n+import App from './App.vue'\n+\n+import Vue from 'vue'\n+\n+import Cookies from 'js-cookie'\n+\n+import Element from 'element-ui'\n+import './assets/styles/element-variables.scss'\n+\n+import '@/assets/styles/index.scss' // global css\n+import '@/assets/styles/ruoyi.scss' // ruoyi css\n+import App from './App'\n+import store from './store'\n+import router from './router'\n+import directive from './directive' // directive\n+import plugins from './plugins' // plugins\n+import { download } from '@/utils/request'\n+\n+import './assets/icons' // icon\n+import './permission' // permission control\n+import { getDicts } from \"@/api/system/dict/data\";\n+import { getConfigKey } from \"@/api/system/config\";\n+import { parseTime, resetForm, addDateRange, selectDictLabel, selectDictLabels, handleTree } from \"@/utils/ruoyi\";\n+// 分页组件\n+import Pagination from \"@/components/Pagination\";\n+// 自定义表格工具组件\n+import RightToolbar from \"@/components/RightToolbar\"\n+// 富文本组件\n+import Editor from \"@/components/Editor\"\n+// 文件上传组件\n+import FileUpload from \"@/components/FileUpload\"\n+// 图片上传组件\n+import ImageUpload from \"@/components/ImageUpload\"\n+// 图片预览组件\n+import ImagePreview from \"@/components/ImagePreview\"\n+// 字典标签组件\n+import DictTag from '@/components/DictTag'\n+// 头部标签组件\n+import VueMeta from 'vue-meta'\n+// 字典数据组件\n+import DictData from '@/components/DictData'\n+\n+// 全局方法挂载\n+Vue.prototype.getDicts = getDicts\n+Vue.prototype.getConfigKey = getConfigKey\n+Vue.prototype.parseTime = parseTime\n+Vue.prototype.resetForm = resetForm\n+Vue.prototype.addDateRange = addDateRange\n+Vue.prototype.selectDictLabel = selectDictLabel\n+Vue.prototype.selectDictLabels = selectDictLabels\n+Vue.prototype.download = download\n+Vue.prototype.handleTree = handleTree\n+\n+// 全局组件挂载\n+Vue.component('DictTag', DictTag)\n+Vue.component('Pagination', Pagination)\n+Vue.component('RightToolbar', RightToolbar)\n+Vue.component('Editor', Editor)\n+Vue.component('FileUpload', FileUpload)\n+Vue.component('ImageUpload', ImageUpload)\n+Vue.component('ImagePreview', ImagePreview)\n+\n+Vue.use(directive)\n+Vue.use(plugins)\n+Vue.use(VueMeta)\n+DictData.install()\n+\n+/**\n+ * If you don't want to use mock-server\n+ * you want to use MockJs for mock api\n+ * you can execute: mockXHR()\n+ *\n+ * Currently MockJs will be used in the production environment,\n+ * please remove it before going online! ! !\n+ */\n+\n+Vue.use(Element, {\n+  size: Cookies.get('size') || 'medium' // set element-ui default size\n+})\n+\n+Vue.config.productionTip = false\n+\n+new Vue({\n+  el: '#app',\n+  router,\n+  store,\n+  render: h => h(App)\n+})\n+\n+// new Vue({\n+//   render: h => h(App),\n+// }).$mount('#app')\n+\n"
                },
                {
                    "date": 1730303685593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import Vue from 'vue'\n+import App from './App.vue'\n+\n+import Cookies from 'js-cookie'\n+\n+import Element from 'element-ui'\n+import './assets/styles/element-variables.scss'\n+\n+import '@/assets/styles/index.scss' // global css\n+import '@/assets/styles/ruoyi.scss' // ruoyi css\n+import App from './App'\n+import store from './store'\n+import router from './router'\n+import directive from './directive' // directive\n+import plugins from './plugins' // plugins\n+import { download } from '@/utils/request'\n+\n+import './assets/icons' // icon\n+import './permission' // permission control\n+import { getDicts } from \"@/api/system/dict/data\";\n+import { getConfigKey } from \"@/api/system/config\";\n+import { parseTime, resetForm, addDateRange, selectDictLabel, selectDictLabels, handleTree } from \"@/utils/ruoyi\";\n+// 分页组件\n+import Pagination from \"@/components/Pagination\";\n+// 自定义表格工具组件\n+import RightToolbar from \"@/components/RightToolbar\"\n+// 富文本组件\n+import Editor from \"@/components/Editor\"\n+// 文件上传组件\n+import FileUpload from \"@/components/FileUpload\"\n+// 图片上传组件\n+import ImageUpload from \"@/components/ImageUpload\"\n+// 图片预览组件\n+import ImagePreview from \"@/components/ImagePreview\"\n+// 字典标签组件\n+import DictTag from '@/components/DictTag'\n+// 头部标签组件\n+import VueMeta from 'vue-meta'\n+// 字典数据组件\n+import DictData from '@/components/DictData'\n+\n+// 全局方法挂载\n+Vue.prototype.getDicts = getDicts\n+Vue.prototype.getConfigKey = getConfigKey\n+Vue.prototype.parseTime = parseTime\n+Vue.prototype.resetForm = resetForm\n+Vue.prototype.addDateRange = addDateRange\n+Vue.prototype.selectDictLabel = selectDictLabel\n+Vue.prototype.selectDictLabels = selectDictLabels\n+Vue.prototype.download = download\n+Vue.prototype.handleTree = handleTree\n+\n+// 全局组件挂载\n+Vue.component('DictTag', DictTag)\n+Vue.component('Pagination', Pagination)\n+Vue.component('RightToolbar', RightToolbar)\n+Vue.component('Editor', Editor)\n+Vue.component('FileUpload', FileUpload)\n+Vue.component('ImageUpload', ImageUpload)\n+Vue.component('ImagePreview', ImagePreview)\n+\n+Vue.use(directive)\n+Vue.use(plugins)\n+Vue.use(VueMeta)\n+DictData.install()\n+\n+/**\n+ * If you don't want to use mock-server\n+ * you want to use MockJs for mock api\n+ * you can execute: mockXHR()\n+ *\n+ * Currently MockJs will be used in the production environment,\n+ * please remove it before going online! ! !\n+ */\n+\n+Vue.use(Element, {\n+  size: Cookies.get('size') || 'medium' // set element-ui default size\n+})\n+\n+Vue.config.productionTip = false\n+\n+new Vue({\n+  el: '#app',\n+  router,\n+  store,\n+  render: h => h(App)\n+})\n+\n+// new Vue({\n+//   render: h => h(App),\n+// }).$mount('#app')\n+\n"
                },
                {
                    "date": 1730303711830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import Vue from 'vue'\n+// import App from './App.vue'\n+\n+import Cookies from 'js-cookie'\n+\n+import Element from 'element-ui'\n+import './assets/styles/element-variables.scss'\n+\n+import '@/assets/styles/index.scss' // global css\n+import '@/assets/styles/ruoyi.scss' // ruoyi css\n+import App from './App'\n+import store from './store'\n+import router from './router'\n+import directive from './directive' // directive\n+import plugins from './plugins' // plugins\n+import { download } from '@/utils/request'\n+\n+import './assets/icons' // icon\n+import './permission' // permission control\n+import { getDicts } from \"@/api/system/dict/data\";\n+import { getConfigKey } from \"@/api/system/config\";\n+import { parseTime, resetForm, addDateRange, selectDictLabel, selectDictLabels, handleTree } from \"@/utils/ruoyi\";\n+// 分页组件\n+import Pagination from \"@/components/Pagination\";\n+// 自定义表格工具组件\n+import RightToolbar from \"@/components/RightToolbar\"\n+// 富文本组件\n+import Editor from \"@/components/Editor\"\n+// 文件上传组件\n+import FileUpload from \"@/components/FileUpload\"\n+// 图片上传组件\n+import ImageUpload from \"@/components/ImageUpload\"\n+// 图片预览组件\n+import ImagePreview from \"@/components/ImagePreview\"\n+// 字典标签组件\n+import DictTag from '@/components/DictTag'\n+// 头部标签组件\n+import VueMeta from 'vue-meta'\n+// 字典数据组件\n+import DictData from '@/components/DictData'\n+\n+// 全局方法挂载\n+Vue.prototype.getDicts = getDicts\n+Vue.prototype.getConfigKey = getConfigKey\n+Vue.prototype.parseTime = parseTime\n+Vue.prototype.resetForm = resetForm\n+Vue.prototype.addDateRange = addDateRange\n+Vue.prototype.selectDictLabel = selectDictLabel\n+Vue.prototype.selectDictLabels = selectDictLabels\n+Vue.prototype.download = download\n+Vue.prototype.handleTree = handleTree\n+\n+// 全局组件挂载\n+Vue.component('DictTag', DictTag)\n+Vue.component('Pagination', Pagination)\n+Vue.component('RightToolbar', RightToolbar)\n+Vue.component('Editor', Editor)\n+Vue.component('FileUpload', FileUpload)\n+Vue.component('ImageUpload', ImageUpload)\n+Vue.component('ImagePreview', ImagePreview)\n+\n+Vue.use(directive)\n+Vue.use(plugins)\n+Vue.use(VueMeta)\n+DictData.install()\n+\n+/**\n+ * If you don't want to use mock-server\n+ * you want to use MockJs for mock api\n+ * you can execute: mockXHR()\n+ *\n+ * Currently MockJs will be used in the production environment,\n+ * please remove it before going online! ! !\n+ */\n+\n+Vue.use(Element, {\n+  size: Cookies.get('size') || 'medium' // set element-ui default size\n+})\n+\n+Vue.config.productionTip = false\n+\n+new Vue({\n+  el: '#app',\n+  router,\n+  store,\n+  render: h => h(App)\n+})\n+\n+// new Vue({\n+//   render: h => h(App),\n+// }).$mount('#app')\n+\n"
                },
                {
                    "date": 1730303892967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,8 @@\n+import Vue from 'vue'\n+import App from './App.vue'\n+\n+Vue.config.productionTip = false\n+\n+new Vue({\n+  render: h => h(App),\n+}).$mount('#app')\n"
                },
                {
                    "date": 1730311436118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,9 @@\n+import Vue from 'vue'\n+import App from './App.vue'\n+import router from './router'; // 引入路由配置\n+\n+Vue.config.productionTip = false\n+\n+new Vue({\n+  render: h => h(App),\n+}).$mount('#app')\n"
                }
            ],
            "date": 1730299699660,
            "name": "Commit-0",
            "content": "import Vue from 'vue'\nimport App from './App.vue'\n\nimport Vue from 'vue'\n\nimport Cookies from 'js-cookie'\n\nimport Element from 'element-ui'\nimport './assets/styles/element-variables.scss'\n\nimport '@/assets/styles/index.scss' // global css\nimport '@/assets/styles/ruoyi.scss' // ruoyi css\nimport App from './App'\nimport store from './store'\nimport router from './router'\nimport directive from './directive' // directive\nimport plugins from './plugins' // plugins\nimport { download } from '@/utils/request'\n\nimport './assets/icons' // icon\nimport './permission' // permission control\nimport { getDicts } from \"@/api/system/dict/data\";\nimport { getConfigKey } from \"@/api/system/config\";\nimport { parseTime, resetForm, addDateRange, selectDictLabel, selectDictLabels, handleTree } from \"@/utils/ruoyi\";\n// 分页组件\nimport Pagination from \"@/components/Pagination\";\n// 自定义表格工具组件\nimport RightToolbar from \"@/components/RightToolbar\"\n// 富文本组件\nimport Editor from \"@/components/Editor\"\n// 文件上传组件\nimport FileUpload from \"@/components/FileUpload\"\n// 图片上传组件\nimport ImageUpload from \"@/components/ImageUpload\"\n// 图片预览组件\nimport ImagePreview from \"@/components/ImagePreview\"\n// 字典标签组件\nimport DictTag from '@/components/DictTag'\n// 头部标签组件\nimport VueMeta from 'vue-meta'\n// 字典数据组件\nimport DictData from '@/components/DictData'\n\n// 全局方法挂载\nVue.prototype.getDicts = getDicts\nVue.prototype.getConfigKey = getConfigKey\nVue.prototype.parseTime = parseTime\nVue.prototype.resetForm = resetForm\nVue.prototype.addDateRange = addDateRange\nVue.prototype.selectDictLabel = selectDictLabel\nVue.prototype.selectDictLabels = selectDictLabels\nVue.prototype.download = download\nVue.prototype.handleTree = handleTree\n\n// 全局组件挂载\nVue.component('DictTag', DictTag)\nVue.component('Pagination', Pagination)\nVue.component('RightToolbar', RightToolbar)\nVue.component('Editor', Editor)\nVue.component('FileUpload', FileUpload)\nVue.component('ImageUpload', ImageUpload)\nVue.component('ImagePreview', ImagePreview)\n\nVue.use(directive)\nVue.use(plugins)\nVue.use(VueMeta)\nDictData.install()\n\n/**\n * If you don't want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online! ! !\n */\n\nVue.use(Element, {\n  size: Cookies.get('size') || 'medium' // set element-ui default size\n})\n\nVue.config.productionTip = false\n\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n\n// new Vue({\n//   render: h => h(App),\n// }).$mount('#app')\n\n"
        }
    ]
}