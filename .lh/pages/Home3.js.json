{
    "sourceFile": "pages/Home3.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1731679392689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731681310015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { Layout, Spin, Image, Button } from 'antd';\r\n+import MouseParallax from './MouseParallax'; // 导入 MouseParallax 组件\r\n+import ParallaxBackground from './ParallaxBackground'; // 导入 立体动态效果组件 组件\r\n+import Link from 'next/link'; // 导入 Link 组件\r\n+import { FormattedMessage } from 'react-intl';\r\n+\r\n+const { Content } = Layout;\r\n+\r\n+const Home3 = () => {\r\n+\tconst [loading, setLoading] = useState(true); // 初始化加载状态为 true\r\n+\r\n+\tconst handleLoadComplete = () => {\r\n+\t\tsetLoading(false); // 加载完成，设置状态为 false\r\n+\t};\r\n+\r\n+\t// {loading ? ( // 根据加载状态显示加载框\r\n+\t// \t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n+\t// \t\t<Spin size=\"large\" /> {/* 显示加载框 */}\r\n+\t// \t</div>\r\n+\t// ) : (\r\n+\t// \t<MouseParallax onLoadComplete={handleLoadComplete} /> // 加载完成后显示 MouseParallax 组件\r\n+\t// )}\r\n+\r\n+\r\n+\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tconst handleResize = () => {\r\n+\t\t\tif (typeof window !== 'undefined') {\r\n+\t\t\t\tsetScreenSize({\r\n+\t\t\t\t\twidth: window.innerWidth,\r\n+\t\t\t\t\theight: window.innerHeight,\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t};\r\n+\r\n+\t\t// 组件挂载时设置初始尺寸\r\n+\t\thandleResize();\r\n+\r\n+\t\t// 添加事件监听器\r\n+\t\twindow.addEventListener('resize', handleResize);\r\n+\t\treturn () => window.removeEventListener('resize', handleResize);\r\n+\t}, []);\r\n+\r\n+\r\n+\treturn (\r\n+\t\t<>\r\n+\t\t\t{/* 手机端布局 */}\r\n+\t\t\t{screenSize.width < 768 ? (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Layout style={{ backgroundColor: '#01050B', margin: 0, padding: 0, height: '100vh' }}>\r\n+\t\t\t\t\t\t<Content style={{ position: 'relative', width: '100%', height: '100%', marginTop: '14%' }}>\r\n+\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\t\t\tsrc=\"/resources/images/home/5.png\" // 背景图路径\r\n+\t\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\tmaxWidth: '100%', // 设置最大宽度为100%\r\n+\t\t\t\t\t\t\t\t\tmaxHeight: '100%', // 设置最大高度为100%\r\n+\t\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t/>\r\n+\t<Image\r\n+\t\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\t\tsrc=\"/resources/images/home/5.png\" // 背景图路径\r\n+\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t</Content>\r\n+\t\t\t\t\t</Layout>\r\n+\t\t\t\t</>\r\n+\t\t\t) : (\r\n+\t\t\t\t<Layout style={{ backgroundColor: '#78659B', margin: 0, padding: 0, overflow: 'hidden' }}>\r\n+\t\t\t\t\t<Content>\r\n+\t\t\t\t\t\t{/* <MouseParallax onLoadComplete={handleLoadComplete} /> */}\r\n+\t\t\t\t\t\t{/* <div className=\"overflow-hidden\">\r\n+\t\t\t\t\t\t\t<div id=\"mouse-parallax-container\" style={{ overflow: 'none', position: 'relative', width: '110vw', height: '100vh' }} className=\"parallax\">\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/1.png)', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/2.png)', backgroundPosition: 'center 40%', backgroundSize: '54vh', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/3.png)', width: '105%', marginLeft: '-2.5%', height: '108%', top: '-4%', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/4.png)', width: '105%', marginLeft: '-2.5%', height: '108%', top: '-4%', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t<ParallaxBackground />\r\n+\t\t\t\t\t</Content>\r\n+\t\t\t\t</Layout>\r\n+\t\t\t)\r\n+\t\t\t}\r\n+\t\t</>\r\n+\t);\r\n+};\r\n+\r\n+export default Home3;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731681319864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { Layout, Spin, Image, Button } from 'antd';\r\n+import MouseParallax from './MouseParallax'; // 导入 MouseParallax 组件\r\n+import ParallaxBackground from './ParallaxBackground'; // 导入 立体动态效果组件 组件\r\n+import Link from 'next/link'; // 导入 Link 组件\r\n+import { FormattedMessage } from 'react-intl';\r\n+\r\n+const { Content } = Layout;\r\n+\r\n+const Home3 = () => {\r\n+\tconst [loading, setLoading] = useState(true); // 初始化加载状态为 true\r\n+\r\n+\tconst handleLoadComplete = () => {\r\n+\t\tsetLoading(false); // 加载完成，设置状态为 false\r\n+\t};\r\n+\r\n+\t// {loading ? ( // 根据加载状态显示加载框\r\n+\t// \t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n+\t// \t\t<Spin size=\"large\" /> {/* 显示加载框 */}\r\n+\t// \t</div>\r\n+\t// ) : (\r\n+\t// \t<MouseParallax onLoadComplete={handleLoadComplete} /> // 加载完成后显示 MouseParallax 组件\r\n+\t// )}\r\n+\r\n+\r\n+\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tconst handleResize = () => {\r\n+\t\t\tif (typeof window !== 'undefined') {\r\n+\t\t\t\tsetScreenSize({\r\n+\t\t\t\t\twidth: window.innerWidth,\r\n+\t\t\t\t\theight: window.innerHeight,\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t};\r\n+\r\n+\t\t// 组件挂载时设置初始尺寸\r\n+\t\thandleResize();\r\n+\r\n+\t\t// 添加事件监听器\r\n+\t\twindow.addEventListener('resize', handleResize);\r\n+\t\treturn () => window.removeEventListener('resize', handleResize);\r\n+\t}, []);\r\n+\r\n+\r\n+\treturn (\r\n+\t\t<>\r\n+\t\t\t{/* 手机端布局 */}\r\n+\t\t\t{screenSize.width < 768 ? (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Layout style={{ backgroundColor: '#01050B', margin: 0, padding: 0, height: '100vh' }}>\r\n+\t\t\t\t\t\t<Content style={{ position: 'relative', width: '100%', height: '100%', marginTop: '14%' }}>\r\n+\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\t\tsrc=\"/resources/images/home/5.png\" // 背景图路径\r\n+\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t</Content>\r\n+\t\t\t\t\t</Layout>\r\n+\t\t\t\t</>\r\n+\t\t\t) : (\r\n+\t\t\t\t<Layout style={{ backgroundColor: '#78659B', margin: 0, padding: 0, overflow: 'hidden' }}>\r\n+\t\t\t\t\t<Content>\r\n+\t\t\t\t\t\t{/* <MouseParallax onLoadComplete={handleLoadComplete} /> */}\r\n+\t\t\t\t\t\t{/* <div className=\"overflow-hidden\">\r\n+\t\t\t\t\t\t\t<div id=\"mouse-parallax-container\" style={{ overflow: 'none', position: 'relative', width: '110vw', height: '100vh' }} className=\"parallax\">\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/1.png)', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/2.png)', backgroundPosition: 'center 40%', backgroundSize: '54vh', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/3.png)', width: '105%', marginLeft: '-2.5%', height: '108%', top: '-4%', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/4.png)', width: '105%', marginLeft: '-2.5%', height: '108%', top: '-4%', transform: 'none' }}></div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t<ParallaxBackground />\r\n+\t\t\t\t\t</Content>\r\n+\t\t\t\t</Layout>\r\n+\t\t\t)\r\n+\t\t\t}\r\n+\t\t</>\r\n+\t);\r\n+};\r\n+\r\n+export default Home3;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1731679392689,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin, Image, Button } from 'antd';\r\nimport MouseParallax from './MouseParallax'; // 导入 MouseParallax 组件\r\nimport ParallaxBackground from './ParallaxBackground'; // 导入 立体动态效果组件 组件\r\nimport Link from 'next/link'; // 导入 Link 组件\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Home3 = () => {\r\n\tconst [loading, setLoading] = useState(true); // 初始化加载状态为 true\r\n\r\n\tconst handleLoadComplete = () => {\r\n\t\tsetLoading(false); // 加载完成，设置状态为 false\r\n\t};\r\n\r\n\t// {loading ? ( // 根据加载状态显示加载框\r\n\t// \t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n\t// \t\t<Spin size=\"large\" /> {/* 显示加载框 */}\r\n\t// \t</div>\r\n\t// ) : (\r\n\t// \t<MouseParallax onLoadComplete={handleLoadComplete} /> // 加载完成后显示 MouseParallax 组件\r\n\t// )}\r\n\r\n\r\n\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResize = () => {\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tsetScreenSize({\r\n\t\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\t\theight: window.innerHeight,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// 组件挂载时设置初始尺寸\r\n\t\thandleResize();\r\n\r\n\t\t// 添加事件监听器\r\n\t\twindow.addEventListener('resize', handleResize);\r\n\t\treturn () => window.removeEventListener('resize', handleResize);\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* 手机端布局 */}\r\n\t\t\t{screenSize.width < 768 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Layout style={{ backgroundColor: '#01050B', margin: 0, padding: 0, height: '100vh' }}>\r\n\t\t\t\t\t\t<Content style={{ position: 'relative', width: '100%', height: '100%', marginTop: '14%' }}>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\talt=\"img\"\r\n\t\t\t\t\t\t\t\tsrc=\"/resources/images/home/5.png\" // 背景图路径\r\n\t\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmaxWidth: '100%', // 设置最大宽度为100%\r\n\t\t\t\t\t\t\t\t\tmaxHeight: '100%', // 设置最大高度为100%\r\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n\t\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{/* <Link href=\"/MintNFT\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tposition: 'absolute', // 绝对定位\r\n\t\t\t\t\t\t\t\t\t\tbottom: '35%', // 距离底部20px\r\n\t\t\t\t\t\t\t\t\t\tleft: '50%', // 水平居中\r\n\t\t\t\t\t\t\t\t\t\ttransform: 'translateX(-50%)', // 使按钮居中\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white', // 按钮背景色\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'black', // 按钮文字颜色\r\n\t\t\t\t\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\t\t\t\t\t/* 设置按钮高度 */\r\n\t\t\t\t\t\t\t\t\t\twidth: '100px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage id={'mint'} />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link> */}\r\n\t\t\t\t\t\t</Content>\r\n\t\t\t\t\t</Layout>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Layout style={{ backgroundColor: '#78659B', margin: 0, padding: 0, overflow: 'hidden' }}>\r\n\t\t\t\t\t<Content>\r\n\t\t\t\t\t\t{/* <MouseParallax onLoadComplete={handleLoadComplete} /> */}\r\n\t\t\t\t\t\t{/* <div className=\"overflow-hidden\">\r\n\t\t\t\t\t\t\t<div id=\"mouse-parallax-container\" style={{ overflow: 'none', position: 'relative', width: '110vw', height: '100vh' }} className=\"parallax\">\r\n\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/1.png)', transform: 'none' }}></div>\r\n\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/2.png)', backgroundPosition: 'center 40%', backgroundSize: '54vh', transform: 'none' }}></div>\r\n\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/3.png)', width: '105%', marginLeft: '-2.5%', height: '108%', top: '-4%', transform: 'none' }}></div>\r\n\t\t\t\t\t\t\t\t<div className=\"paraChild\" style={{ backgroundImage: 'url(/resources/images/home/4.png)', width: '105%', marginLeft: '-2.5%', height: '108%', top: '-4%', transform: 'none' }}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t<ParallaxBackground />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home3;"
        }
    ]
}