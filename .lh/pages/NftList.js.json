{
    "sourceFile": "pages/NftList.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1731679530093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731679882460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n \t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n \t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={2} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n \t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n \t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n"
                },
                {
                    "date": 1731679893274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n \t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n \t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={2} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n \t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n \t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n"
                },
                {
                    "date": 1731679934829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n \t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n \t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n \t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n \t\t\t\t\t\t\t\t\t\t}}\r\n \t\t\t\t\t\t\t\t\t>\r\n \t\t\t\t\t\t\t\t\t\t{loading ? (\r\n \t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n@@ -295,33 +295,8 @@\n \t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t</Content>\r\n-\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n-\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n-\t\t\t\t\t\t\t<span\r\n-\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n-\t\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n-\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n-\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n-\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n-\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n-\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n-\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n-\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n-\t\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t{loading ? (\r\n-\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n-\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n-\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n-\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n-\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t</span>\r\n-\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n \t\t\t\t\t\t<Modal\r\n \t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n \t\t\t\t\t\t\topen={isModalVisible}\r\n"
                },
                {
                    "date": 1731679970636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,9 +231,9 @@\n \t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n \t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n \t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n \t\t\t\t\t\t\t}}>\r\n-\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '4%' }}>\r\n \t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n \t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n"
                },
                {
                    "date": 1731679978303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,9 +231,9 @@\n \t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n \t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n \t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n \t\t\t\t\t\t\t}}>\r\n-\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '4%' }}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '8%' }}>\r\n \t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n \t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n"
                },
                {
                    "date": 1731680032008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,449 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n+// import disPic from './resources/images/upload-file.jpg';\r\n+import { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n+//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\n+import { FormattedMessage } from 'react-intl';\r\n+\r\n+const xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\n+const { Meta } = Card;\r\n+const { Content } = Layout; // 确保在这里定义 Content\r\n+\r\n+const NftList = () => {\r\n+\tconst [file, setfile] = useState();\r\n+\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n+\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n+\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n+\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n+\tconst [page, setPage] = useState(1);\r\n+\tconst [name, setName] = useState();\r\n+\tconst [symbol, setSymbol] = useState();\r\n+\tconst [desc, setDesc] = useState();\r\n+\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n+\tconst [extUrl, setExtUrl] = useState();\r\n+\tconst [maxSup, setMaxSup] = useState(100);\r\n+\tconst [roy, setRoy] = useState(99);\r\n+\tconst [minted, setMinted] = useState();\r\n+\tconst [saveMinted, setSaveMinted] = useState();\r\n+\tconst [errorRoy, setErrorRoy] = useState();\r\n+\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n+\tconst [dispResponse, setDispResp] = useState(\"\");\r\n+\tconst [connStatus, setConnStatus] = useState(true);\r\n+\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst [status, setStatus] = useState(\"Loading...\");\r\n+\tconst [walletId, setWalletId] = useState(null);\r\n+\tconst [hasAccess, setAccess] = useState(false);\r\n+\tconst [msg, setMsg] = useState(\"\");\r\n+\tconst [walletAddress, setWalletAddress] = useState('');\r\n+\tconst [showDropdown, setShowDropdown] = useState(false);\r\n+\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n+\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n+\tconst [hasMoreData, setMoreData] = useState(true);\r\n+\r\n+\tconst callback = (signature, result) => {\r\n+\t\tconsole.log(\"Signature \", signature);\r\n+\t\tconsole.log(\"result \", result);\r\n+\t\tif (signature.err === null) {\r\n+\t\t\tsetMinted(saveMinted);\r\n+\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n+\t\t}\r\n+\t}\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n+\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n+\r\n+\tconst fetchNftList = async () => {\r\n+\t\tsetLoading(true);\r\n+\t\tsetStatus(\"Loading\");\r\n+\r\n+\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n+\t\tconst collection_address = collectionAddress;\r\n+\r\n+\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n+\t\taxios({\r\n+\t\t\turl: reqUrl,\r\n+\t\t\tmethod: \"GET\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"application/json\",\r\n+\t\t\t\t\"x-api-key\": xAPIKey,\r\n+\t\t\t},\r\n+\t\t})\r\n+\t\t\t.then((res) => {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\t// 处理成功的响应\r\n+\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n+\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n+\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n+\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n+\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n+\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n+\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n+\r\n+\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n+\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n+\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n+\t\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n+\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n+\t\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n+\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n+\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n+\t\t\t\t\t\t// \t}\r\n+\t\t\t\t\t\t// });\r\n+\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n+\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t})\r\n+\t\t\t.finally(() => {\r\n+\t\t\t\tsetLoading(false);\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst handleImageClick = (nft) => {\r\n+\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n+\t\tsetIsModalVisible(true); // 显示模态框\r\n+\t};\r\n+\r\n+\tconst handleModalClose = () => {\r\n+\t\tsetIsModalVisible(false); // 关闭模态框\r\n+\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n+\t};\r\n+\r\n+\tconst mintNow = (e) => {\r\n+\t\te.preventDefault();\r\n+\t\tsetStatus(\"Loading\");\r\n+\t\tlet formData = new FormData();\r\n+\t\tformData.append(\"network\", network);\r\n+\t\tformData.append(\"wallet\", publicKey);\r\n+\t\tformData.append(\"name\", name);\r\n+\t\tformData.append(\"symbol\", symbol);\r\n+\t\tformData.append(\"description\", desc);\r\n+\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n+\t\tformData.append(\"external_url\", extUrl);\r\n+\t\tformData.append(\"max_supply\", maxSup);\r\n+\t\tformData.append(\"royalty\", roy);\r\n+\t\tformData.append(\"file\", file);\r\n+\r\n+\t\taxios({\r\n+\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n+\t\t\tmethod: \"POST\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n+\t\t\t\t\"x-api-key\": xApiKey,\r\n+\t\t\t\tAccept: \"*/*\",\r\n+\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n+\t\t\t},\r\n+\t\t\tdata: formData,\r\n+\t\t})\r\n+\t\t\t.then(async (res) => {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n+\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n+\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n+\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n+\t\t\t\t\tconsole.log(ret_result);\r\n+\t\t\t\t\tsetDispResp(res.data);\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetStatus(\"success: false\");\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tconst handleResize = () => {\r\n+\t\t\tif (typeof window !== 'undefined') {\r\n+\t\t\t\tsetScreenSize({\r\n+\t\t\t\t\twidth: window.innerWidth,\r\n+\t\t\t\t\theight: window.innerHeight,\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t};\r\n+\r\n+\t\t// 组件挂载时设置初始尺寸\r\n+\t\thandleResize();\r\n+\r\n+\t\t// 添加事件监听器\r\n+\t\twindow.addEventListener('resize', handleResize);\r\n+\t\treturn () => window.removeEventListener('resize', handleResize);\r\n+\t}, []);\r\n+\r\n+\treturn (\r\n+\t\t<>\r\n+\t\t\t{/* 手机端布局 */}\r\n+\t\t\t{screenSize.width < 768 ? (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n+\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n+\t\t\t\t\t\t\t<div style={{\r\n+\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n+\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n+\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n+\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n+\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n+\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n+\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n+\t\t\t\t\t\t\t}}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n+\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</Content>\r\n+\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t</Modal>\r\n+\t\t\t\t\t</Layout >\r\n+\t\t\t\t</>\r\n+\t\t\t) : (\r\n+\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t}}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n+\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n+\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n+\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n+\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</Content>\r\n+\r\n+\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t>\r\n+\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t)}\r\n+\t\t\t\t\t</Modal>\r\n+\t\t\t\t</Layout >\r\n+\t\t\t)\r\n+\t\t\t}\r\n+\t\t</>\r\n+\t);\r\n+};\r\n+\r\n+export default NftList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731680085723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,9 +231,9 @@\n \t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n \t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n \t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n \t\t\t\t\t\t\t}}>\r\n-\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '8%' }}>\r\n \t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n \t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n"
                },
                {
                    "date": 1731680092158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,9 +231,9 @@\n \t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n \t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n \t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n \t\t\t\t\t\t\t}}>\r\n-\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '8%' }}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n \t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n \t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n"
                },
                {
                    "date": 1731680100929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,9 +259,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B'}}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n \t\t\t\t\t\t\t\t\t\t\t</Col>\r\n"
                },
                {
                    "date": 1731680119328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n \t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n \t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} > {/* 增加每个 Col 的下间隔 */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n \t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n \t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n"
                },
                {
                    "date": 1731680128163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,449 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n+// import disPic from './resources/images/upload-file.jpg';\r\n+import { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n+//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\n+import { FormattedMessage } from 'react-intl';\r\n+\r\n+const xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\n+const { Meta } = Card;\r\n+const { Content } = Layout; // 确保在这里定义 Content\r\n+\r\n+const NftList = () => {\r\n+\tconst [file, setfile] = useState();\r\n+\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n+\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n+\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n+\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n+\tconst [page, setPage] = useState(1);\r\n+\tconst [name, setName] = useState();\r\n+\tconst [symbol, setSymbol] = useState();\r\n+\tconst [desc, setDesc] = useState();\r\n+\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n+\tconst [extUrl, setExtUrl] = useState();\r\n+\tconst [maxSup, setMaxSup] = useState(100);\r\n+\tconst [roy, setRoy] = useState(99);\r\n+\tconst [minted, setMinted] = useState();\r\n+\tconst [saveMinted, setSaveMinted] = useState();\r\n+\tconst [errorRoy, setErrorRoy] = useState();\r\n+\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n+\tconst [dispResponse, setDispResp] = useState(\"\");\r\n+\tconst [connStatus, setConnStatus] = useState(true);\r\n+\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst [status, setStatus] = useState(\"Loading...\");\r\n+\tconst [walletId, setWalletId] = useState(null);\r\n+\tconst [hasAccess, setAccess] = useState(false);\r\n+\tconst [msg, setMsg] = useState(\"\");\r\n+\tconst [walletAddress, setWalletAddress] = useState('');\r\n+\tconst [showDropdown, setShowDropdown] = useState(false);\r\n+\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n+\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n+\tconst [hasMoreData, setMoreData] = useState(true);\r\n+\r\n+\tconst callback = (signature, result) => {\r\n+\t\tconsole.log(\"Signature \", signature);\r\n+\t\tconsole.log(\"result \", result);\r\n+\t\tif (signature.err === null) {\r\n+\t\t\tsetMinted(saveMinted);\r\n+\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n+\t\t}\r\n+\t}\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n+\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n+\r\n+\tconst fetchNftList = async () => {\r\n+\t\tsetLoading(true);\r\n+\t\tsetStatus(\"Loading\");\r\n+\r\n+\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n+\t\tconst collection_address = collectionAddress;\r\n+\r\n+\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n+\t\taxios({\r\n+\t\t\turl: reqUrl,\r\n+\t\t\tmethod: \"GET\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"application/json\",\r\n+\t\t\t\t\"x-api-key\": xAPIKey,\r\n+\t\t\t},\r\n+\t\t})\r\n+\t\t\t.then((res) => {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\t// 处理成功的响应\r\n+\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n+\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n+\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n+\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n+\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n+\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n+\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n+\r\n+\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n+\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n+\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n+\t\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n+\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n+\t\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n+\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n+\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n+\t\t\t\t\t\t// \t}\r\n+\t\t\t\t\t\t// });\r\n+\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n+\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t})\r\n+\t\t\t.finally(() => {\r\n+\t\t\t\tsetLoading(false);\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst handleImageClick = (nft) => {\r\n+\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n+\t\tsetIsModalVisible(true); // 显示模态框\r\n+\t};\r\n+\r\n+\tconst handleModalClose = () => {\r\n+\t\tsetIsModalVisible(false); // 关闭模态框\r\n+\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n+\t};\r\n+\r\n+\tconst mintNow = (e) => {\r\n+\t\te.preventDefault();\r\n+\t\tsetStatus(\"Loading\");\r\n+\t\tlet formData = new FormData();\r\n+\t\tformData.append(\"network\", network);\r\n+\t\tformData.append(\"wallet\", publicKey);\r\n+\t\tformData.append(\"name\", name);\r\n+\t\tformData.append(\"symbol\", symbol);\r\n+\t\tformData.append(\"description\", desc);\r\n+\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n+\t\tformData.append(\"external_url\", extUrl);\r\n+\t\tformData.append(\"max_supply\", maxSup);\r\n+\t\tformData.append(\"royalty\", roy);\r\n+\t\tformData.append(\"file\", file);\r\n+\r\n+\t\taxios({\r\n+\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n+\t\t\tmethod: \"POST\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n+\t\t\t\t\"x-api-key\": xApiKey,\r\n+\t\t\t\tAccept: \"*/*\",\r\n+\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n+\t\t\t},\r\n+\t\t\tdata: formData,\r\n+\t\t})\r\n+\t\t\t.then(async (res) => {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n+\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n+\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n+\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n+\t\t\t\t\tconsole.log(ret_result);\r\n+\t\t\t\t\tsetDispResp(res.data);\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetStatus(\"success: false\");\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tconst handleResize = () => {\r\n+\t\t\tif (typeof window !== 'undefined') {\r\n+\t\t\t\tsetScreenSize({\r\n+\t\t\t\t\twidth: window.innerWidth,\r\n+\t\t\t\t\theight: window.innerHeight,\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t};\r\n+\r\n+\t\t// 组件挂载时设置初始尺寸\r\n+\t\thandleResize();\r\n+\r\n+\t\t// 添加事件监听器\r\n+\t\twindow.addEventListener('resize', handleResize);\r\n+\t\treturn () => window.removeEventListener('resize', handleResize);\r\n+\t}, []);\r\n+\r\n+\treturn (\r\n+\t\t<>\r\n+\t\t\t{/* 手机端布局 */}\r\n+\t\t\t{screenSize.width < 768 ? (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n+\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n+\t\t\t\t\t\t\t<div style={{\r\n+\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n+\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n+\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n+\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n+\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n+\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n+\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n+\t\t\t\t\t\t\t}}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n+\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} >\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B'}}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</Content>\r\n+\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t</Modal>\r\n+\t\t\t\t\t</Layout >\r\n+\t\t\t\t</>\r\n+\t\t\t) : (\r\n+\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t}}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n+\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n+\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n+\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n+\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</Content>\r\n+\r\n+\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t>\r\n+\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t)}\r\n+\t\t\t\t\t</Modal>\r\n+\t\t\t\t</Layout >\r\n+\t\t\t)\r\n+\t\t\t}\r\n+\t\t</>\r\n+\t);\r\n+};\r\n+\r\n+export default NftList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731680134297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n \t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n \t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} >\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n \t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n \t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n \t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n"
                },
                {
                    "date": 1731680142857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n \t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n \t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={10} >\r\n \t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n \t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n \t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n"
                },
                {
                    "date": 1731680172121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n \t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n \t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n \t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n \t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={10} >\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} >\r\n \t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n \t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n \t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n"
                },
                {
                    "date": 1731680203061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,17 +241,8 @@\n \t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n \t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n \t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n"
                },
                {
                    "date": 1731680252808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '16px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n \t\t\t\t\t\t\t\t\t\t\t</Col>\r\n"
                },
                {
                    "date": 1731680327400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,440 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n+// import disPic from './resources/images/upload-file.jpg';\r\n+import { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n+//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\n+import { FormattedMessage } from 'react-intl';\r\n+\r\n+const xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\n+const { Meta } = Card;\r\n+const { Content } = Layout; // 确保在这里定义 Content\r\n+\r\n+const NftList = () => {\r\n+\tconst [file, setfile] = useState();\r\n+\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n+\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n+\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n+\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n+\tconst [page, setPage] = useState(1);\r\n+\tconst [name, setName] = useState();\r\n+\tconst [symbol, setSymbol] = useState();\r\n+\tconst [desc, setDesc] = useState();\r\n+\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n+\tconst [extUrl, setExtUrl] = useState();\r\n+\tconst [maxSup, setMaxSup] = useState(100);\r\n+\tconst [roy, setRoy] = useState(99);\r\n+\tconst [minted, setMinted] = useState();\r\n+\tconst [saveMinted, setSaveMinted] = useState();\r\n+\tconst [errorRoy, setErrorRoy] = useState();\r\n+\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n+\tconst [dispResponse, setDispResp] = useState(\"\");\r\n+\tconst [connStatus, setConnStatus] = useState(true);\r\n+\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst [status, setStatus] = useState(\"Loading...\");\r\n+\tconst [walletId, setWalletId] = useState(null);\r\n+\tconst [hasAccess, setAccess] = useState(false);\r\n+\tconst [msg, setMsg] = useState(\"\");\r\n+\tconst [walletAddress, setWalletAddress] = useState('');\r\n+\tconst [showDropdown, setShowDropdown] = useState(false);\r\n+\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n+\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n+\tconst [hasMoreData, setMoreData] = useState(true);\r\n+\r\n+\tconst callback = (signature, result) => {\r\n+\t\tconsole.log(\"Signature \", signature);\r\n+\t\tconsole.log(\"result \", result);\r\n+\t\tif (signature.err === null) {\r\n+\t\t\tsetMinted(saveMinted);\r\n+\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n+\t\t}\r\n+\t}\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n+\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n+\r\n+\tconst fetchNftList = async () => {\r\n+\t\tsetLoading(true);\r\n+\t\tsetStatus(\"Loading\");\r\n+\r\n+\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n+\t\tconst collection_address = collectionAddress;\r\n+\r\n+\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n+\t\taxios({\r\n+\t\t\turl: reqUrl,\r\n+\t\t\tmethod: \"GET\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"application/json\",\r\n+\t\t\t\t\"x-api-key\": xAPIKey,\r\n+\t\t\t},\r\n+\t\t})\r\n+\t\t\t.then((res) => {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\t// 处理成功的响应\r\n+\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n+\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n+\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n+\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n+\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n+\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n+\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n+\r\n+\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n+\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n+\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n+\t\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n+\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n+\t\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n+\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n+\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n+\t\t\t\t\t\t// \t}\r\n+\t\t\t\t\t\t// });\r\n+\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n+\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t})\r\n+\t\t\t.finally(() => {\r\n+\t\t\t\tsetLoading(false);\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst handleImageClick = (nft) => {\r\n+\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n+\t\tsetIsModalVisible(true); // 显示模态框\r\n+\t};\r\n+\r\n+\tconst handleModalClose = () => {\r\n+\t\tsetIsModalVisible(false); // 关闭模态框\r\n+\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n+\t};\r\n+\r\n+\tconst mintNow = (e) => {\r\n+\t\te.preventDefault();\r\n+\t\tsetStatus(\"Loading\");\r\n+\t\tlet formData = new FormData();\r\n+\t\tformData.append(\"network\", network);\r\n+\t\tformData.append(\"wallet\", publicKey);\r\n+\t\tformData.append(\"name\", name);\r\n+\t\tformData.append(\"symbol\", symbol);\r\n+\t\tformData.append(\"description\", desc);\r\n+\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n+\t\tformData.append(\"external_url\", extUrl);\r\n+\t\tformData.append(\"max_supply\", maxSup);\r\n+\t\tformData.append(\"royalty\", roy);\r\n+\t\tformData.append(\"file\", file);\r\n+\r\n+\t\taxios({\r\n+\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n+\t\t\tmethod: \"POST\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n+\t\t\t\t\"x-api-key\": xApiKey,\r\n+\t\t\t\tAccept: \"*/*\",\r\n+\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n+\t\t\t},\r\n+\t\t\tdata: formData,\r\n+\t\t})\r\n+\t\t\t.then(async (res) => {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n+\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n+\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n+\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n+\t\t\t\t\tconsole.log(ret_result);\r\n+\t\t\t\t\tsetDispResp(res.data);\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetStatus(\"success: false\");\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tconst handleResize = () => {\r\n+\t\t\tif (typeof window !== 'undefined') {\r\n+\t\t\t\tsetScreenSize({\r\n+\t\t\t\t\twidth: window.innerWidth,\r\n+\t\t\t\t\theight: window.innerHeight,\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t};\r\n+\r\n+\t\t// 组件挂载时设置初始尺寸\r\n+\t\thandleResize();\r\n+\r\n+\t\t// 添加事件监听器\r\n+\t\twindow.addEventListener('resize', handleResize);\r\n+\t\treturn () => window.removeEventListener('resize', handleResize);\r\n+\t}, []);\r\n+\r\n+\treturn (\r\n+\t\t<>\r\n+\t\t\t{/* 手机端布局 */}\r\n+\t\t\t{screenSize.width < 768 ? (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n+\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n+\t\t\t\t\t\t\t<div style={{\r\n+\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n+\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n+\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n+\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n+\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n+\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n+\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n+\t\t\t\t\t\t\t}}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n+\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} >\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', height: '40px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</Content>\r\n+\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t</Modal>\r\n+\t\t\t\t\t</Layout >\r\n+\t\t\t\t</>\r\n+\t\t\t) : (\r\n+\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t}}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n+\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n+\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n+\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n+\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '18px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</Content>\r\n+\r\n+\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t>\r\n+\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t)}\r\n+\t\t\t\t\t</Modal>\r\n+\t\t\t\t</Layout >\r\n+\t\t\t)\r\n+\t\t\t}\r\n+\t\t</>\r\n+\t);\r\n+};\r\n+\r\n+export default NftList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731680332727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,9 +250,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', height: '40px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B'}}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n \t\t\t\t\t\t\t\t\t\t\t</Col>\r\n"
                },
                {
                    "date": 1731680338470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,9 +250,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B'}}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B',height: '20px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n \t\t\t\t\t\t\t\t\t\t\t</Col>\r\n@@ -436,1343 +436,5 @@\n \t\t</>\r\n \t);\r\n };\r\n \r\n-export default NftList;\n-import React, { useState, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n-// import disPic from './resources/images/upload-file.jpg';\r\n-import { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n-//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\n-import { FormattedMessage } from 'react-intl';\r\n-\r\n-const xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\n-const { Meta } = Card;\r\n-const { Content } = Layout; // 确保在这里定义 Content\r\n-\r\n-const NftList = () => {\r\n-\tconst [file, setfile] = useState();\r\n-\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n-\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n-\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n-\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n-\tconst [page, setPage] = useState(1);\r\n-\tconst [name, setName] = useState();\r\n-\tconst [symbol, setSymbol] = useState();\r\n-\tconst [desc, setDesc] = useState();\r\n-\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n-\tconst [extUrl, setExtUrl] = useState();\r\n-\tconst [maxSup, setMaxSup] = useState(100);\r\n-\tconst [roy, setRoy] = useState(99);\r\n-\tconst [minted, setMinted] = useState();\r\n-\tconst [saveMinted, setSaveMinted] = useState();\r\n-\tconst [errorRoy, setErrorRoy] = useState();\r\n-\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n-\tconst [dispResponse, setDispResp] = useState(\"\");\r\n-\tconst [connStatus, setConnStatus] = useState(true);\r\n-\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n-\tconst [loading, setLoading] = useState(false);\r\n-\tconst [status, setStatus] = useState(\"Loading...\");\r\n-\tconst [walletId, setWalletId] = useState(null);\r\n-\tconst [hasAccess, setAccess] = useState(false);\r\n-\tconst [msg, setMsg] = useState(\"\");\r\n-\tconst [walletAddress, setWalletAddress] = useState('');\r\n-\tconst [showDropdown, setShowDropdown] = useState(false);\r\n-\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n-\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n-\tconst [hasMoreData, setMoreData] = useState(true);\r\n-\r\n-\tconst callback = (signature, result) => {\r\n-\t\tconsole.log(\"Signature \", signature);\r\n-\t\tconsole.log(\"result \", result);\r\n-\t\tif (signature.err === null) {\r\n-\t\t\tsetMinted(saveMinted);\r\n-\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tuseEffect(() => {\r\n-\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n-\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n-\r\n-\tconst fetchNftList = async () => {\r\n-\t\tsetLoading(true);\r\n-\t\tsetStatus(\"Loading\");\r\n-\r\n-\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n-\t\tconst collection_address = collectionAddress;\r\n-\r\n-\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n-\t\taxios({\r\n-\t\t\turl: reqUrl,\r\n-\t\t\tmethod: \"GET\",\r\n-\t\t\theaders: {\r\n-\t\t\t\t\"Content-Type\": \"application/json\",\r\n-\t\t\t\t\"x-api-key\": xAPIKey,\r\n-\t\t\t},\r\n-\t\t})\r\n-\t\t\t.then((res) => {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tif (res.data.success === true) {\r\n-\t\t\t\t\t// 处理成功的响应\r\n-\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n-\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n-\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n-\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n-\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n-\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n-\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n-\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n-\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n-\r\n-\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n-\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n-\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n-\t\t\t\t\t\t\t}\r\n-\r\n-\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n-\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n-\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n-\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n-\t\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t\t}\r\n-\r\n-\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n-\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n-\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n-\t\t\t\t\t\t// \t}\r\n-\t\t\t\t\t\t// });\r\n-\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n-\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tsetName('Failed to Load Data');\r\n-\t\t\t\t}\r\n-\t\t\t})\r\n-\t\t\t.catch((err) => {\r\n-\t\t\t\tconsole.warn(err);\r\n-\t\t\t\tsetName('Failed to Load Data');\r\n-\t\t\t})\r\n-\t\t\t.finally(() => {\r\n-\t\t\t\tsetLoading(false);\r\n-\t\t\t});\r\n-\t}\r\n-\r\n-\tconst handleImageClick = (nft) => {\r\n-\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n-\t\tsetIsModalVisible(true); // 显示模态框\r\n-\t};\r\n-\r\n-\tconst handleModalClose = () => {\r\n-\t\tsetIsModalVisible(false); // 关闭模态框\r\n-\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n-\t};\r\n-\r\n-\tconst mintNow = (e) => {\r\n-\t\te.preventDefault();\r\n-\t\tsetStatus(\"Loading\");\r\n-\t\tlet formData = new FormData();\r\n-\t\tformData.append(\"network\", network);\r\n-\t\tformData.append(\"wallet\", publicKey);\r\n-\t\tformData.append(\"name\", name);\r\n-\t\tformData.append(\"symbol\", symbol);\r\n-\t\tformData.append(\"description\", desc);\r\n-\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n-\t\tformData.append(\"external_url\", extUrl);\r\n-\t\tformData.append(\"max_supply\", maxSup);\r\n-\t\tformData.append(\"royalty\", roy);\r\n-\t\tformData.append(\"file\", file);\r\n-\r\n-\t\taxios({\r\n-\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n-\t\t\tmethod: \"POST\",\r\n-\t\t\theaders: {\r\n-\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n-\t\t\t\t\"x-api-key\": xApiKey,\r\n-\t\t\t\tAccept: \"*/*\",\r\n-\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n-\t\t\t},\r\n-\t\t\tdata: formData,\r\n-\t\t})\r\n-\t\t\t.then(async (res) => {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tif (res.data.success === true) {\r\n-\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n-\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n-\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n-\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n-\t\t\t\t\tconsole.log(ret_result);\r\n-\t\t\t\t\tsetDispResp(res.data);\r\n-\t\t\t\t}\r\n-\t\t\t})\r\n-\t\t\t.catch((err) => {\r\n-\t\t\t\tconsole.warn(err);\r\n-\t\t\t\tsetStatus(\"success: false\");\r\n-\t\t\t});\r\n-\t}\r\n-\r\n-\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n-\r\n-\tuseEffect(() => {\r\n-\t\tconst handleResize = () => {\r\n-\t\t\tif (typeof window !== 'undefined') {\r\n-\t\t\t\tsetScreenSize({\r\n-\t\t\t\t\twidth: window.innerWidth,\r\n-\t\t\t\t\theight: window.innerHeight,\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\t// 组件挂载时设置初始尺寸\r\n-\t\thandleResize();\r\n-\r\n-\t\t// 添加事件监听器\r\n-\t\twindow.addEventListener('resize', handleResize);\r\n-\t\treturn () => window.removeEventListener('resize', handleResize);\r\n-\t}, []);\r\n-\r\n-\treturn (\r\n-\t\t<>\r\n-\t\t\t{/* 手机端布局 */}\r\n-\t\t\t{screenSize.width < 768 ? (\r\n-\t\t\t\t<>\r\n-\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\talt=\"img\"\r\n-\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n-\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n-\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n-\t\t\t\t\t\t\t\ttop: 0,\r\n-\t\t\t\t\t\t\t\tleft: 0,\r\n-\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n-\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n-\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n-\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n-\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n-\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n-\t\t\t\t\t\t\t<div style={{\r\n-\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n-\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n-\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n-\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n-\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n-\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n-\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n-\t\t\t\t\t\t\t}}>\r\n-\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n-\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n-\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n-\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} >\r\n-\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B'}}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n-\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</Row>\r\n-\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n-\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n-\t\t\t\t\t\t\t\t\t<span\r\n-\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n-\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n-\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n-\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n-\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n-\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n-\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n-\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n-\t\t\t\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t</span>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t</Content>\r\n-\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n-\t\t\t\t\t\t<Modal\r\n-\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n-\t\t\t\t\t\t\topen={isModalVisible}\r\n-\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n-\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n-\t\t\t\t\t\t\tfooter={null}\r\n-\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{selectedNft && (\r\n-\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n-\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n-\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n-\t\t\t\t\t\t\t\t\t\t\t</li>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</ul>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t</Modal>\r\n-\t\t\t\t\t</Layout >\r\n-\t\t\t\t</>\r\n-\t\t\t) : (\r\n-\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\talt=\"img\"\r\n-\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n-\t\t\t\t\t\tpreview={false} // 禁用预览\r\n-\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n-\t\t\t\t\t\t\ttop: 0,\r\n-\t\t\t\t\t\t\tleft: 0,\r\n-\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n-\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n-\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n-\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n-\t\t\t\t\t\t}}\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n-\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n-\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n-\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n-\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n-\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n-\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '16px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n-\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</Row>\r\n-\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n-\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n-\t\t\t\t\t\t\t\t\t<span\r\n-\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n-\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n-\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n-\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n-\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n-\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n-\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n-\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n-\t\t\t\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t</span>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</Content>\r\n-\r\n-\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n-\t\t\t\t\t<Modal\r\n-\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n-\t\t\t\t\t\topen={isModalVisible}\r\n-\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n-\t\t\t\t\t\tonCancel={handleModalClose}\r\n-\t\t\t\t\t\tfooter={null}\r\n-\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t\t{selectedNft && (\r\n-\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n-\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n-\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n-\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n-\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n-\t\t\t\t\t\t\t\t\t\t</li>\r\n-\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t</ul>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t)}\r\n-\t\t\t\t\t</Modal>\r\n-\t\t\t\t</Layout >\r\n-\t\t\t)\r\n-\t\t\t}\r\n-\t\t</>\r\n-\t);\r\n-};\r\n-\r\n-export default NftList;\n-import React, { useState, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n-// import disPic from './resources/images/upload-file.jpg';\r\n-import { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n-//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\n-import { FormattedMessage } from 'react-intl';\r\n-\r\n-const xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\n-const { Meta } = Card;\r\n-const { Content } = Layout; // 确保在这里定义 Content\r\n-\r\n-const NftList = () => {\r\n-\tconst [file, setfile] = useState();\r\n-\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n-\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n-\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n-\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n-\tconst [page, setPage] = useState(1);\r\n-\tconst [name, setName] = useState();\r\n-\tconst [symbol, setSymbol] = useState();\r\n-\tconst [desc, setDesc] = useState();\r\n-\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n-\tconst [extUrl, setExtUrl] = useState();\r\n-\tconst [maxSup, setMaxSup] = useState(100);\r\n-\tconst [roy, setRoy] = useState(99);\r\n-\tconst [minted, setMinted] = useState();\r\n-\tconst [saveMinted, setSaveMinted] = useState();\r\n-\tconst [errorRoy, setErrorRoy] = useState();\r\n-\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n-\tconst [dispResponse, setDispResp] = useState(\"\");\r\n-\tconst [connStatus, setConnStatus] = useState(true);\r\n-\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n-\tconst [loading, setLoading] = useState(false);\r\n-\tconst [status, setStatus] = useState(\"Loading...\");\r\n-\tconst [walletId, setWalletId] = useState(null);\r\n-\tconst [hasAccess, setAccess] = useState(false);\r\n-\tconst [msg, setMsg] = useState(\"\");\r\n-\tconst [walletAddress, setWalletAddress] = useState('');\r\n-\tconst [showDropdown, setShowDropdown] = useState(false);\r\n-\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n-\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n-\tconst [hasMoreData, setMoreData] = useState(true);\r\n-\r\n-\tconst callback = (signature, result) => {\r\n-\t\tconsole.log(\"Signature \", signature);\r\n-\t\tconsole.log(\"result \", result);\r\n-\t\tif (signature.err === null) {\r\n-\t\t\tsetMinted(saveMinted);\r\n-\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tuseEffect(() => {\r\n-\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n-\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n-\r\n-\tconst fetchNftList = async () => {\r\n-\t\tsetLoading(true);\r\n-\t\tsetStatus(\"Loading\");\r\n-\r\n-\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n-\t\tconst collection_address = collectionAddress;\r\n-\r\n-\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n-\t\taxios({\r\n-\t\t\turl: reqUrl,\r\n-\t\t\tmethod: \"GET\",\r\n-\t\t\theaders: {\r\n-\t\t\t\t\"Content-Type\": \"application/json\",\r\n-\t\t\t\t\"x-api-key\": xAPIKey,\r\n-\t\t\t},\r\n-\t\t})\r\n-\t\t\t.then((res) => {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tif (res.data.success === true) {\r\n-\t\t\t\t\t// 处理成功的响应\r\n-\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n-\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n-\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n-\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n-\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n-\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n-\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n-\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n-\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n-\r\n-\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n-\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n-\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n-\t\t\t\t\t\t\t}\r\n-\r\n-\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n-\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n-\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n-\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n-\t\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t\t}\r\n-\r\n-\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n-\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n-\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n-\t\t\t\t\t\t// \t}\r\n-\t\t\t\t\t\t// });\r\n-\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n-\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tsetName('Failed to Load Data');\r\n-\t\t\t\t}\r\n-\t\t\t})\r\n-\t\t\t.catch((err) => {\r\n-\t\t\t\tconsole.warn(err);\r\n-\t\t\t\tsetName('Failed to Load Data');\r\n-\t\t\t})\r\n-\t\t\t.finally(() => {\r\n-\t\t\t\tsetLoading(false);\r\n-\t\t\t});\r\n-\t}\r\n-\r\n-\tconst handleImageClick = (nft) => {\r\n-\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n-\t\tsetIsModalVisible(true); // 显示模态框\r\n-\t};\r\n-\r\n-\tconst handleModalClose = () => {\r\n-\t\tsetIsModalVisible(false); // 关闭模态框\r\n-\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n-\t};\r\n-\r\n-\tconst mintNow = (e) => {\r\n-\t\te.preventDefault();\r\n-\t\tsetStatus(\"Loading\");\r\n-\t\tlet formData = new FormData();\r\n-\t\tformData.append(\"network\", network);\r\n-\t\tformData.append(\"wallet\", publicKey);\r\n-\t\tformData.append(\"name\", name);\r\n-\t\tformData.append(\"symbol\", symbol);\r\n-\t\tformData.append(\"description\", desc);\r\n-\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n-\t\tformData.append(\"external_url\", extUrl);\r\n-\t\tformData.append(\"max_supply\", maxSup);\r\n-\t\tformData.append(\"royalty\", roy);\r\n-\t\tformData.append(\"file\", file);\r\n-\r\n-\t\taxios({\r\n-\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n-\t\t\tmethod: \"POST\",\r\n-\t\t\theaders: {\r\n-\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n-\t\t\t\t\"x-api-key\": xApiKey,\r\n-\t\t\t\tAccept: \"*/*\",\r\n-\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n-\t\t\t},\r\n-\t\t\tdata: formData,\r\n-\t\t})\r\n-\t\t\t.then(async (res) => {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tif (res.data.success === true) {\r\n-\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n-\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n-\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n-\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n-\t\t\t\t\tconsole.log(ret_result);\r\n-\t\t\t\t\tsetDispResp(res.data);\r\n-\t\t\t\t}\r\n-\t\t\t})\r\n-\t\t\t.catch((err) => {\r\n-\t\t\t\tconsole.warn(err);\r\n-\t\t\t\tsetStatus(\"success: false\");\r\n-\t\t\t});\r\n-\t}\r\n-\r\n-\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n-\r\n-\tuseEffect(() => {\r\n-\t\tconst handleResize = () => {\r\n-\t\t\tif (typeof window !== 'undefined') {\r\n-\t\t\t\tsetScreenSize({\r\n-\t\t\t\t\twidth: window.innerWidth,\r\n-\t\t\t\t\theight: window.innerHeight,\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\t// 组件挂载时设置初始尺寸\r\n-\t\thandleResize();\r\n-\r\n-\t\t// 添加事件监听器\r\n-\t\twindow.addEventListener('resize', handleResize);\r\n-\t\treturn () => window.removeEventListener('resize', handleResize);\r\n-\t}, []);\r\n-\r\n-\treturn (\r\n-\t\t<>\r\n-\t\t\t{/* 手机端布局 */}\r\n-\t\t\t{screenSize.width < 768 ? (\r\n-\t\t\t\t<>\r\n-\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\talt=\"img\"\r\n-\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n-\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n-\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n-\t\t\t\t\t\t\t\ttop: 0,\r\n-\t\t\t\t\t\t\t\tleft: 0,\r\n-\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n-\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n-\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n-\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n-\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n-\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n-\t\t\t\t\t\t\t<div style={{\r\n-\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n-\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n-\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n-\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n-\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n-\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n-\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n-\t\t\t\t\t\t\t}}>\r\n-\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n-\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n-\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n-\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} > {/* 增加每个 Col 的下间隔 */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B'}}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n-\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</Row>\r\n-\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n-\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n-\t\t\t\t\t\t\t\t\t<span\r\n-\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n-\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n-\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n-\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n-\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n-\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n-\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n-\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n-\t\t\t\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t</span>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t</Content>\r\n-\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n-\t\t\t\t\t\t<Modal\r\n-\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n-\t\t\t\t\t\t\topen={isModalVisible}\r\n-\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n-\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n-\t\t\t\t\t\t\tfooter={null}\r\n-\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{selectedNft && (\r\n-\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n-\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n-\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n-\t\t\t\t\t\t\t\t\t\t\t</li>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</ul>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t</Modal>\r\n-\t\t\t\t\t</Layout >\r\n-\t\t\t\t</>\r\n-\t\t\t) : (\r\n-\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\talt=\"img\"\r\n-\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n-\t\t\t\t\t\tpreview={false} // 禁用预览\r\n-\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n-\t\t\t\t\t\t\ttop: 0,\r\n-\t\t\t\t\t\t\tleft: 0,\r\n-\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n-\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n-\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n-\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n-\t\t\t\t\t\t}}\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n-\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n-\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n-\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n-\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n-\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n-\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n-\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</Row>\r\n-\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n-\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n-\t\t\t\t\t\t\t\t\t<span\r\n-\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n-\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n-\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n-\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n-\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n-\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n-\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n-\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n-\t\t\t\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t</span>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</Content>\r\n-\r\n-\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n-\t\t\t\t\t<Modal\r\n-\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n-\t\t\t\t\t\topen={isModalVisible}\r\n-\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n-\t\t\t\t\t\tonCancel={handleModalClose}\r\n-\t\t\t\t\t\tfooter={null}\r\n-\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t\t{selectedNft && (\r\n-\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n-\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n-\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n-\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n-\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n-\t\t\t\t\t\t\t\t\t\t</li>\r\n-\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t</ul>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t)}\r\n-\t\t\t\t\t</Modal>\r\n-\t\t\t\t</Layout >\r\n-\t\t\t)\r\n-\t\t\t}\r\n-\t\t</>\r\n-\t);\r\n-};\r\n-\r\n-export default NftList;\n-import React, { useState, useEffect } from \"react\";\r\n-import axios from \"axios\";\r\n-import { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n-// import disPic from './resources/images/upload-file.jpg';\r\n-import { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n-//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\n-import { FormattedMessage } from 'react-intl';\r\n-\r\n-const xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\n-const { Meta } = Card;\r\n-const { Content } = Layout; // 确保在这里定义 Content\r\n-\r\n-const NftList = () => {\r\n-\tconst [file, setfile] = useState();\r\n-\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n-\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n-\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n-\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n-\tconst [page, setPage] = useState(1);\r\n-\tconst [name, setName] = useState();\r\n-\tconst [symbol, setSymbol] = useState();\r\n-\tconst [desc, setDesc] = useState();\r\n-\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n-\tconst [extUrl, setExtUrl] = useState();\r\n-\tconst [maxSup, setMaxSup] = useState(100);\r\n-\tconst [roy, setRoy] = useState(99);\r\n-\tconst [minted, setMinted] = useState();\r\n-\tconst [saveMinted, setSaveMinted] = useState();\r\n-\tconst [errorRoy, setErrorRoy] = useState();\r\n-\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n-\tconst [dispResponse, setDispResp] = useState(\"\");\r\n-\tconst [connStatus, setConnStatus] = useState(true);\r\n-\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n-\tconst [loading, setLoading] = useState(false);\r\n-\tconst [status, setStatus] = useState(\"Loading...\");\r\n-\tconst [walletId, setWalletId] = useState(null);\r\n-\tconst [hasAccess, setAccess] = useState(false);\r\n-\tconst [msg, setMsg] = useState(\"\");\r\n-\tconst [walletAddress, setWalletAddress] = useState('');\r\n-\tconst [showDropdown, setShowDropdown] = useState(false);\r\n-\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n-\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n-\tconst [hasMoreData, setMoreData] = useState(true);\r\n-\r\n-\tconst callback = (signature, result) => {\r\n-\t\tconsole.log(\"Signature \", signature);\r\n-\t\tconsole.log(\"result \", result);\r\n-\t\tif (signature.err === null) {\r\n-\t\t\tsetMinted(saveMinted);\r\n-\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tuseEffect(() => {\r\n-\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n-\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n-\r\n-\tconst fetchNftList = async () => {\r\n-\t\tsetLoading(true);\r\n-\t\tsetStatus(\"Loading\");\r\n-\r\n-\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n-\t\tconst collection_address = collectionAddress;\r\n-\r\n-\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n-\t\taxios({\r\n-\t\t\turl: reqUrl,\r\n-\t\t\tmethod: \"GET\",\r\n-\t\t\theaders: {\r\n-\t\t\t\t\"Content-Type\": \"application/json\",\r\n-\t\t\t\t\"x-api-key\": xAPIKey,\r\n-\t\t\t},\r\n-\t\t})\r\n-\t\t\t.then((res) => {\r\n-\t\t\t\tconsole.log(res.data);\r\n-\t\t\t\tif (res.data.success === true) {\r\n-\t\t\t\t\t// 处理成功的响应\r\n-\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n-\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n-\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n-\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n-\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n-\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n-\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n-\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n-\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n-\r\n-\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n-\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n-\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n-\t\t\t\t\t\t\t}\r\n-\r\n-\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n-\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n-\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n-\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n-\t\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t\t}\r\n-\r\n-\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n-\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n-\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n-\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n-\t\t\t\t\t\t// \t}\r\n-\t\t\t\t\t\t// });\r\n-\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n-\t\t\t\t\t\tsetMoreData(false);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tsetName('Failed to Load Data');\r\n-\t\t\t\t}\r\n-\t\t\t})\r\n-\t\t\t.catch((err) => {\r\n-\t\t\t\tconsole.warn(err);\r\n-\t\t\t\tsetName('Failed to Load Data');\r\n-\t\t\t})\r\n-\t\t\t.finally(() => {\r\n-\t\t\t\tsetLoading(false);\r\n-\t\t\t});\r\n-\t}\r\n-\r\n-\tconst handleImageClick = (nft) => {\r\n-\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n-\t\tsetIsModalVisible(true); // 显示模态框\r\n-\t};\r\n-\r\n-\tconst handleModalClose = () => {\r\n-\t\tsetIsModalVisible(false); // 关闭模态框\r\n-\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n-\t};\r\n-\r\n-\tconst mintNow = (e) => {\r\n-\t\te.preventDefault();\r\n-\t\tsetStatus(\"Loading\");\r\n-\t\tlet formData = new FormData();\r\n-\t\tformData.append(\"network\", network);\r\n-\t\tformData.append(\"wallet\", publicKey);\r\n-\t\tformData.append(\"name\", name);\r\n-\t\tformData.append(\"symbol\", symbol);\r\n-\t\tformData.append(\"description\", desc);\r\n-\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n-\t\tformData.append(\"external_url\", extUrl);\r\n-\t\tformData.append(\"max_supply\", maxSup);\r\n-\t\tformData.append(\"royalty\", roy);\r\n-\t\tformData.append(\"file\", file);\r\n-\r\n-\t\taxios({\r\n-\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n-\t\t\tmethod: \"POST\",\r\n-\t\t\theaders: {\r\n-\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n-\t\t\t\t\"x-api-key\": xApiKey,\r\n-\t\t\t\tAccept: \"*/*\",\r\n-\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n-\t\t\t},\r\n-\t\t\tdata: formData,\r\n-\t\t})\r\n-\t\t\t.then(async (res) => {\r\n-\t\t\t\tconsole.log(res);\r\n-\t\t\t\tif (res.data.success === true) {\r\n-\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n-\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n-\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n-\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n-\t\t\t\t\tconsole.log(ret_result);\r\n-\t\t\t\t\tsetDispResp(res.data);\r\n-\t\t\t\t}\r\n-\t\t\t})\r\n-\t\t\t.catch((err) => {\r\n-\t\t\t\tconsole.warn(err);\r\n-\t\t\t\tsetStatus(\"success: false\");\r\n-\t\t\t});\r\n-\t}\r\n-\r\n-\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n-\r\n-\tuseEffect(() => {\r\n-\t\tconst handleResize = () => {\r\n-\t\t\tif (typeof window !== 'undefined') {\r\n-\t\t\t\tsetScreenSize({\r\n-\t\t\t\t\twidth: window.innerWidth,\r\n-\t\t\t\t\theight: window.innerHeight,\r\n-\t\t\t\t});\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\t// 组件挂载时设置初始尺寸\r\n-\t\thandleResize();\r\n-\r\n-\t\t// 添加事件监听器\r\n-\t\twindow.addEventListener('resize', handleResize);\r\n-\t\treturn () => window.removeEventListener('resize', handleResize);\r\n-\t}, []);\r\n-\r\n-\treturn (\r\n-\t\t<>\r\n-\t\t\t{/* 手机端布局 */}\r\n-\t\t\t{screenSize.width < 768 ? (\r\n-\t\t\t\t<>\r\n-\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\talt=\"img\"\r\n-\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n-\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n-\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n-\t\t\t\t\t\t\t\ttop: 0,\r\n-\t\t\t\t\t\t\t\tleft: 0,\r\n-\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n-\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n-\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n-\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n-\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n-\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n-\t\t\t\t\t\t\t<div style={{\r\n-\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n-\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n-\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n-\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n-\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n-\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n-\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n-\t\t\t\t\t\t\t}}>\r\n-\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '8%' }}>\r\n-\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n-\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n-\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n-\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</Row>\r\n-\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n-\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n-\t\t\t\t\t\t\t\t\t<span\r\n-\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n-\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n-\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n-\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n-\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n-\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n-\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n-\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n-\t\t\t\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t</span>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t</Content>\r\n-\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n-\t\t\t\t\t\t<Modal\r\n-\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n-\t\t\t\t\t\t\topen={isModalVisible}\r\n-\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n-\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n-\t\t\t\t\t\t\tfooter={null}\r\n-\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n-\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t{selectedNft && (\r\n-\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n-\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n-\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n-\t\t\t\t\t\t\t\t\t\t\t</li>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</ul>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t</Modal>\r\n-\t\t\t\t\t</Layout >\r\n-\t\t\t\t</>\r\n-\t\t\t) : (\r\n-\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t<Image\r\n-\t\t\t\t\t\talt=\"img\"\r\n-\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n-\t\t\t\t\t\tpreview={false} // 禁用预览\r\n-\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n-\t\t\t\t\t\t\ttop: 0,\r\n-\t\t\t\t\t\t\tleft: 0,\r\n-\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n-\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n-\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n-\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n-\t\t\t\t\t\t}}\r\n-\t\t\t\t\t/>\r\n-\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n-\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n-\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n-\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n-\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n-\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n-\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n-\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n-\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n-\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n-\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t</Row>\r\n-\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n-\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n-\t\t\t\t\t\t\t\t\t<span\r\n-\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n-\t\t\t\t\t\t\t\t\t\tstyle={{\r\n-\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n-\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n-\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n-\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n-\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n-\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n-\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n-\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n-\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n-\t\t\t\t\t\t\t\t\t\t}}\r\n-\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t) : (\r\n-\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n-\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t</span>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t</Content>\r\n-\r\n-\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n-\t\t\t\t\t<Modal\r\n-\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n-\t\t\t\t\t\topen={isModalVisible}\r\n-\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n-\t\t\t\t\t\tonCancel={handleModalClose}\r\n-\t\t\t\t\t\tfooter={null}\r\n-\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n-\t\t\t\t\t>\r\n-\t\t\t\t\t\t{selectedNft && (\r\n-\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t<Image\r\n-\t\t\t\t\t\t\t\t\tpreview={false}\r\n-\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n-\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n-\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n-\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n-\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n-\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n-\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n-\t\t\t\t\t\t\t\t\t\t</li>\r\n-\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t</ul>\r\n-\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t)}\r\n-\t\t\t\t\t</Modal>\r\n-\t\t\t\t</Layout >\r\n-\t\t\t)\r\n-\t\t\t}\r\n-\t\t</>\r\n-\t);\r\n-};\r\n-\r\n export default NftList;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731680353316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,9 +250,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B',height: '10px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B',height: '10px', lineHeight: '1.5' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n \t\t\t\t\t\t\t\t\t\t\t</Col>\r\n"
                },
                {
                    "date": 1731680361034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,440 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n+import { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n+// import disPic from './resources/images/upload-file.jpg';\r\n+import { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n+//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\n+import { FormattedMessage } from 'react-intl';\r\n+\r\n+const xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\n+const { Meta } = Card;\r\n+const { Content } = Layout; // 确保在这里定义 Content\r\n+\r\n+const NftList = () => {\r\n+\tconst [file, setfile] = useState();\r\n+\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n+\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n+\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n+\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n+\tconst [page, setPage] = useState(1);\r\n+\tconst [name, setName] = useState();\r\n+\tconst [symbol, setSymbol] = useState();\r\n+\tconst [desc, setDesc] = useState();\r\n+\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n+\tconst [extUrl, setExtUrl] = useState();\r\n+\tconst [maxSup, setMaxSup] = useState(100);\r\n+\tconst [roy, setRoy] = useState(99);\r\n+\tconst [minted, setMinted] = useState();\r\n+\tconst [saveMinted, setSaveMinted] = useState();\r\n+\tconst [errorRoy, setErrorRoy] = useState();\r\n+\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n+\tconst [dispResponse, setDispResp] = useState(\"\");\r\n+\tconst [connStatus, setConnStatus] = useState(true);\r\n+\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst [status, setStatus] = useState(\"Loading...\");\r\n+\tconst [walletId, setWalletId] = useState(null);\r\n+\tconst [hasAccess, setAccess] = useState(false);\r\n+\tconst [msg, setMsg] = useState(\"\");\r\n+\tconst [walletAddress, setWalletAddress] = useState('');\r\n+\tconst [showDropdown, setShowDropdown] = useState(false);\r\n+\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n+\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n+\tconst [hasMoreData, setMoreData] = useState(true);\r\n+\r\n+\tconst callback = (signature, result) => {\r\n+\t\tconsole.log(\"Signature \", signature);\r\n+\t\tconsole.log(\"result \", result);\r\n+\t\tif (signature.err === null) {\r\n+\t\t\tsetMinted(saveMinted);\r\n+\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n+\t\t}\r\n+\t}\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n+\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n+\r\n+\tconst fetchNftList = async () => {\r\n+\t\tsetLoading(true);\r\n+\t\tsetStatus(\"Loading\");\r\n+\r\n+\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n+\t\tconst collection_address = collectionAddress;\r\n+\r\n+\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n+\t\taxios({\r\n+\t\t\turl: reqUrl,\r\n+\t\t\tmethod: \"GET\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"application/json\",\r\n+\t\t\t\t\"x-api-key\": xAPIKey,\r\n+\t\t\t},\r\n+\t\t})\r\n+\t\t\t.then((res) => {\r\n+\t\t\t\tconsole.log(res.data);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\t// 处理成功的响应\r\n+\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n+\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n+\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n+\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n+\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n+\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n+\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n+\r\n+\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n+\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n+\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n+\t\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n+\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n+\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n+\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n+\t\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t} else {\r\n+\t\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t\t}\r\n+\r\n+\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n+\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n+\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n+\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n+\t\t\t\t\t\t// \t}\r\n+\t\t\t\t\t\t// });\r\n+\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n+\t\t\t\t\t\tsetMoreData(false);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetName('Failed to Load Data');\r\n+\t\t\t})\r\n+\t\t\t.finally(() => {\r\n+\t\t\t\tsetLoading(false);\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst handleImageClick = (nft) => {\r\n+\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n+\t\tsetIsModalVisible(true); // 显示模态框\r\n+\t};\r\n+\r\n+\tconst handleModalClose = () => {\r\n+\t\tsetIsModalVisible(false); // 关闭模态框\r\n+\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n+\t};\r\n+\r\n+\tconst mintNow = (e) => {\r\n+\t\te.preventDefault();\r\n+\t\tsetStatus(\"Loading\");\r\n+\t\tlet formData = new FormData();\r\n+\t\tformData.append(\"network\", network);\r\n+\t\tformData.append(\"wallet\", publicKey);\r\n+\t\tformData.append(\"name\", name);\r\n+\t\tformData.append(\"symbol\", symbol);\r\n+\t\tformData.append(\"description\", desc);\r\n+\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n+\t\tformData.append(\"external_url\", extUrl);\r\n+\t\tformData.append(\"max_supply\", maxSup);\r\n+\t\tformData.append(\"royalty\", roy);\r\n+\t\tformData.append(\"file\", file);\r\n+\r\n+\t\taxios({\r\n+\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n+\t\t\tmethod: \"POST\",\r\n+\t\t\theaders: {\r\n+\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n+\t\t\t\t\"x-api-key\": xApiKey,\r\n+\t\t\t\tAccept: \"*/*\",\r\n+\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n+\t\t\t},\r\n+\t\t\tdata: formData,\r\n+\t\t})\r\n+\t\t\t.then(async (res) => {\r\n+\t\t\t\tconsole.log(res);\r\n+\t\t\t\tif (res.data.success === true) {\r\n+\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n+\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n+\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n+\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n+\t\t\t\t\tconsole.log(ret_result);\r\n+\t\t\t\t\tsetDispResp(res.data);\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n+\t\t\t.catch((err) => {\r\n+\t\t\t\tconsole.warn(err);\r\n+\t\t\t\tsetStatus(\"success: false\");\r\n+\t\t\t});\r\n+\t}\r\n+\r\n+\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n+\r\n+\tuseEffect(() => {\r\n+\t\tconst handleResize = () => {\r\n+\t\t\tif (typeof window !== 'undefined') {\r\n+\t\t\t\tsetScreenSize({\r\n+\t\t\t\t\twidth: window.innerWidth,\r\n+\t\t\t\t\theight: window.innerHeight,\r\n+\t\t\t\t});\r\n+\t\t\t}\r\n+\t\t};\r\n+\r\n+\t\t// 组件挂载时设置初始尺寸\r\n+\t\thandleResize();\r\n+\r\n+\t\t// 添加事件监听器\r\n+\t\twindow.addEventListener('resize', handleResize);\r\n+\t\treturn () => window.removeEventListener('resize', handleResize);\r\n+\t}, []);\r\n+\r\n+\treturn (\r\n+\t\t<>\r\n+\t\t\t{/* 手机端布局 */}\r\n+\t\t\t{screenSize.width < 768 ? (\r\n+\t\t\t\t<>\r\n+\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n+\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n+\t\t\t\t\t\t\t<div style={{\r\n+\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n+\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n+\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n+\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n+\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n+\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n+\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n+\t\t\t\t\t\t\t}}>\r\n+\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)', margin: '10%' }}>\r\n+\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} >\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B',height: '1%', lineHeight: '1.5' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</Content>\r\n+\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t</Modal>\r\n+\t\t\t\t\t</Layout >\r\n+\t\t\t\t</>\r\n+\t\t\t) : (\r\n+\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t<Image\r\n+\t\t\t\t\t\talt=\"img\"\r\n+\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n+\t\t\t\t\t\tpreview={false} // 禁用预览\r\n+\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n+\t\t\t\t\t\t\ttop: 0,\r\n+\t\t\t\t\t\t\tleft: 0,\r\n+\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n+\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n+\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n+\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n+\t\t\t\t\t\t}}\r\n+\t\t\t\t\t/>\r\n+\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n+\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n+\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n+\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n+\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n+\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n+\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n+\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n+\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '18px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n+\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n+\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t</Row>\r\n+\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n+\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n+\t\t\t\t\t\t\t\t\t<span\r\n+\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n+\t\t\t\t\t\t\t\t\t\tstyle={{\r\n+\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n+\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n+\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n+\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n+\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n+\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n+\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n+\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n+\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n+\t\t\t\t\t\t\t\t\t\t}}\r\n+\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t) : (\r\n+\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n+\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t</span>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t</Content>\r\n+\r\n+\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n+\t\t\t\t\t<Modal\r\n+\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n+\t\t\t\t\t\topen={isModalVisible}\r\n+\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n+\t\t\t\t\t\tonCancel={handleModalClose}\r\n+\t\t\t\t\t\tfooter={null}\r\n+\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n+\t\t\t\t\t>\r\n+\t\t\t\t\t\t{selectedNft && (\r\n+\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t<Image\r\n+\t\t\t\t\t\t\t\t\tpreview={false}\r\n+\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n+\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n+\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n+\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n+\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n+\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n+\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n+\t\t\t\t\t\t\t\t\t\t</li>\r\n+\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t</ul>\r\n+\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t)}\r\n+\t\t\t\t\t</Modal>\r\n+\t\t\t\t</Layout >\r\n+\t\t\t)\r\n+\t\t\t}\r\n+\t\t</>\r\n+\t);\r\n+};\r\n+\r\n+export default NftList;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1731679530093,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { signAndConfirmTransactionFe } from \"./utilityfunc\";\r\n// import disPic from './resources/images/upload-file.jpg';\r\nimport { Button, Card, Row, Col, Spin, Layout, Modal, Image } from 'antd'; // 确保 Layout 在这里导入\r\n//import AppHeader from './AppHeader'; // 导入 AppHeader 组件\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst xApiKey = \"GZdHhsJYG2Wa94Am\"; //Enter Your x-api-key here\r\nconst { Meta } = Card;\r\nconst { Content } = Layout; // 确保在这里定义 Content\r\n\r\nconst NftList = () => {\r\n\tconst [file, setfile] = useState();\r\n\t// const [displayPic, setDisplayPic] = useState(disPic);\r\n\tconst [network, setnetwork] = useState(\"mainnet-beta\");\r\n\tconst [publicKey, setPublicKey] = useState('9d7Cj7v6sTWDJPYjfuHRwwZkNyj9Ydc4JoLjCx9kbM3n');\r\n\tconst [collectionAddress, setCollectionAddress] = useState('5ZXCtgPopb3vjPjQ4XQPWyS8WjDiZvTkTDPKE8q9pKe1');\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [name, setName] = useState();\r\n\tconst [symbol, setSymbol] = useState();\r\n\tconst [desc, setDesc] = useState();\r\n\tconst [attr, setAttr] = useState(JSON.stringify([{ \"trait_type\": \"edification\", \"value\": \"100\" }]));\r\n\tconst [extUrl, setExtUrl] = useState();\r\n\tconst [maxSup, setMaxSup] = useState(100);\r\n\tconst [roy, setRoy] = useState(99);\r\n\tconst [minted, setMinted] = useState();\r\n\tconst [saveMinted, setSaveMinted] = useState();\r\n\tconst [errorRoy, setErrorRoy] = useState();\r\n\t//const [status, setStatus] = useState(\"Awaiting Upload\");\r\n\tconst [dispResponse, setDispResp] = useState(\"\");\r\n\tconst [connStatus, setConnStatus] = useState(true);\r\n\tconst [zeroNfts, setZeroNfts] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [status, setStatus] = useState(\"Loading...\");\r\n\tconst [walletId, setWalletId] = useState(null);\r\n\tconst [hasAccess, setAccess] = useState(false);\r\n\tconst [msg, setMsg] = useState(\"\");\r\n\tconst [walletAddress, setWalletAddress] = useState('');\r\n\tconst [showDropdown, setShowDropdown] = useState(false);\r\n\tconst [selectedNft, setSelectedNft] = useState(null); // 用于存储选中的 NFT\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false); // 控制模态框的可见性\r\n\tconst [hasMoreData, setMoreData] = useState(true);\r\n\r\n\tconst callback = (signature, result) => {\r\n\t\tconsole.log(\"Signature \", signature);\r\n\t\tconsole.log(\"result \", result);\r\n\t\tif (signature.err === null) {\r\n\t\t\tsetMinted(saveMinted);\r\n\t\t\tsetStatus(\"success: Successfully Signed and Minted.\");\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchNftList(); // 在组件加载时调用 fetchNftList\r\n\t}, [zeroNfts]); // 空依赖数组确保只在首次渲染时调用\r\n\r\n\tconst fetchNftList = async () => {\r\n\t\tsetLoading(true);\r\n\t\tsetStatus(\"Loading\");\r\n\r\n\t\tconst xAPIKey = 'GZdHhsJYG2Wa94Am'; //Your X-API-KEY here\r\n\t\tconst collection_address = collectionAddress;\r\n\r\n\t\tlet reqUrl = `https://api.shyft.to/sol/v1/collections/get_nfts?network=${network}&page=${page}&size=50&collection_address=${collection_address}`;\r\n\t\taxios({\r\n\t\t\turl: reqUrl,\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"x-api-key\": xAPIKey,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tif (res.data.success === true) {\r\n\t\t\t\t\t// 处理成功的响应\r\n\t\t\t\t\tconst result = res.data.result; // 获取 result 对象\r\n\t\t\t\t\tif (result && Array.isArray(result.nfts)) {\r\n\t\t\t\t\t\tconst nfts = result.nfts; // 获取 nfts 数组\r\n\t\t\t\t\t\tif (nfts || nfts.length > 0) {\r\n\t\t\t\t\t\t\tlet filteredNfts = nfts.filter(nft => nft.name !== 'LingSan03'); // 过滤掉 name 为 LingSan03 的 NFT\r\n\t\t\t\t\t\t\tconsole.log('length:' + filteredNfts.length)\r\n\t\t\t\t\t\t\tif (zeroNfts.length > 0) {\r\n\t\t\t\t\t\t\t\t// 创建一个集合来存储 zeroNfts 中的名称\r\n\t\t\t\t\t\t\t\tconst existingNames = new Set(zeroNfts.map(existingNft => existingNft.name));\r\n\r\n\t\t\t\t\t\t\t\t// console.log('Existing NFT Names:', Array.from(existingNames)); // 打印现有 NFT 名称\r\n\t\t\t\t\t\t\t\t// 去重 filteredNfts，确保只保留不在 zeroNfts 中的 NFT\r\n\t\t\t\t\t\t\t\tfilteredNfts = filteredNfts.filter(nft => !existingNames.has(nft.name));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconsole.log('filteredNfts:' + filteredNfts.length)\r\n\t\t\t\t\t\t\tif (filteredNfts.length > 0) {\r\n\t\t\t\t\t\t\t\tsetZeroNfts(prevNfts => [...prevNfts, ...filteredNfts]); // 将新数据添加到现有数组中\r\n\t\t\t\t\t\t\t\tsetPage(prevPage => prevPage + 1); // 增加页码\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsetMoreData(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetMoreData(false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// nfts.forEach((nft) => {\r\n\t\t\t\t\t\t// \tif (nft) { // 检查 nft 是否存在\r\n\t\t\t\t\t\t// \t\tconsole.log(`Name: ${nft.name}`);\r\n\t\t\t\t\t\t// \t\tconsole.log(`Symbol: ${nft.symbol}`);\r\n\t\t\t\t\t\t// \t\tconsole.log(`Description: ${nft.description}`);\r\n\t\t\t\t\t\t// \t\tconsole.log(`Image URI: ${nft.image_uri}`);\r\n\t\t\t\t\t\t// \t\t// 这里可以根据需要处理其他属性\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// });\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(\"nfts 数组为空或不存在\");\r\n\t\t\t\t\t\tsetMoreData(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetName('Failed to Load Data');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.warn(err);\r\n\t\t\t\tsetName('Failed to Load Data');\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst handleImageClick = (nft) => {\r\n\t\tsetSelectedNft(nft); // 设置选中的 NFT\r\n\t\tsetIsModalVisible(true); // 显示模态框\r\n\t};\r\n\r\n\tconst handleModalClose = () => {\r\n\t\tsetIsModalVisible(false); // 关闭模态框\r\n\t\tsetSelectedNft(null); // 清空选中的 NFT\r\n\t};\r\n\r\n\tconst mintNow = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetStatus(\"Loading\");\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"network\", network);\r\n\t\tformData.append(\"wallet\", publicKey);\r\n\t\tformData.append(\"name\", name);\r\n\t\tformData.append(\"symbol\", symbol);\r\n\t\tformData.append(\"description\", desc);\r\n\t\tformData.append(\"attributes\", JSON.stringify(attr));\r\n\t\tformData.append(\"external_url\", extUrl);\r\n\t\tformData.append(\"max_supply\", maxSup);\r\n\t\tformData.append(\"royalty\", roy);\r\n\t\tformData.append(\"file\", file);\r\n\r\n\t\taxios({\r\n\t\t\turl: \"https://api.shyft.to/sol/v1/nft/create_detach\",\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t\"x-api-key\": xApiKey,\r\n\t\t\t\tAccept: \"*/*\",\r\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\t\t\t},\r\n\t\t\tdata: formData,\r\n\t\t})\r\n\t\t\t.then(async (res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tif (res.data.success === true) {\r\n\t\t\t\t\tsetStatus(\"success: Transaction Created. Signing Transactions. Please Wait.\");\r\n\t\t\t\t\tconst transaction = res.data.result.encoded_transaction;\r\n\t\t\t\t\tsetSaveMinted(res.data.result.mint);\r\n\t\t\t\t\tconst ret_result = await signAndConfirmTransactionFe(network, transaction, callback);\r\n\t\t\t\t\tconsole.log(ret_result);\r\n\t\t\t\t\tsetDispResp(res.data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.warn(err);\r\n\t\t\t\tsetStatus(\"success: false\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResize = () => {\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tsetScreenSize({\r\n\t\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\t\theight: window.innerHeight,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// 组件挂载时设置初始尺寸\r\n\t\thandleResize();\r\n\r\n\t\t// 添加事件监听器\r\n\t\twindow.addEventListener('resize', handleResize);\r\n\t\treturn () => window.removeEventListener('resize', handleResize);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* 手机端布局 */}\r\n\t\t\t{screenSize.width < 768 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\talt=\"img\"\r\n\t\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n\t\t\t\t\t\t\tpreview={false} // 禁用预览\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n\t\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n\t\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n\t\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)', marginTop: '18%', }}>\r\n\t\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 NFTs</h2>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tpadding: '2% 2%',\r\n\t\t\t\t\t\t\t\tbackground: 'rgba(255, 255, 255, 0)',\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\t\toverflowX: 'auto', // 允许水平滚动\r\n\t\t\t\t\t\t\t\twhiteSpace: 'nowrap', // 确保卡片在同一行\r\n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start' // 左对齐\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n\t\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Content>\r\n\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n\t\t\t\t\t\t\t\t\tfontSize: '14px', // 设置文字大小\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n\t\t\t\t\t\t\topen={isModalVisible}\r\n\t\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n\t\t\t\t\t\t\tonCancel={handleModalClose}\r\n\t\t\t\t\t\t\tfooter={null}\r\n\t\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{selectedNft && (\r\n\t\t\t\t\t\t\t\t<div style={{ display: 'block', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n\t\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50%', maxHeight: '50%', objectFit: 'contain', marginBottom: '20px' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', fontSize: '14px', marginTop: '0', color: '#01050B' }}>\r\n\t\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.5' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block' }}>{attr.trait_type}:</span> {attr.value}\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</Layout >\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Layout style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\talt=\"img\"\r\n\t\t\t\t\t\tsrc=\"/resources/images/mintback.png\" // 背景图路径\r\n\t\t\t\t\t\tpreview={false} // 禁用预览\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: 'fixed', // 使用 fixed 使其相对于视口固定\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\twidth: '100vw', // 设置宽度为视口宽度\r\n\t\t\t\t\t\t\theight: '100vh', // 设置高度为视口高度\r\n\t\t\t\t\t\t\tobjectFit: 'cover', // 确保图片覆盖整个区域\r\n\t\t\t\t\t\t\tzIndex: -1 // 确保背景图在其他内容后面\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Content style={{ background: 'rgba(255, 255, 255, 0)' }}> {/* 设置背景色为 #01050B */}\r\n\t\t\t\t\t\t<h2 style={{ textAlign: 'center', marginTop: '4%' }}>Zero3 Ntfs</h2> {/* 设置居中和顶部间隔 */}\r\n\t\t\t\t\t\t<div style={{ paddingLeft: '10%', paddingRight: '10%', paddingTop: '2%', paddingBottom: '2%', background: 'rgba(255, 255, 255, 0)' }}>\r\n\t\t\t\t\t\t\t{/* <div className=\"p-5 text-center\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-success button-25\" onClick={fetchNftList}>Fetch NFT List</button>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t<div style={{ background: 'rgba(255, 255, 255, 0)' }}>\r\n\t\t\t\t\t\t\t\t{loading && zeroNfts.length === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<Spin tip=\"Loading...\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row gutter={16} style={{ marginBottom: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t{zeroNfts.map((nft, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Col span={4} key={`${nft.id}-${index}`} style={{ marginBottom: '16px' }}> {/* 增加每个 Col 的下间隔 */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thoverable\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcover={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborder: '10px solid transparent', // 设置透明边框\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tborderImage: `url(${borderPic}) 10 stretch`, // 使用边框图片\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tposition: 'relative',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tpadding: '10px', // 内边距\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tbackground: `url(${borderPic}) no-repeat center/cover`, // 使用背景图片\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={nft.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={nft.image_uri}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImageClick(nft)} // 添加点击事件\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }} // 鼠标悬停时显示为指针\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ color: '#01050B', fontSize: '14px' }}> {/* 设置 nft.name 的颜色为 #01050B */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nft.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{/* 添加加载更多按钮 */}\r\n\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tonClick={hasMoreData ? fetchNftList : null} // 只有在有更多数据时才允许点击\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: hasMoreData ? '#1890ff' : '#ccc', // 根据状态设置文字颜色\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: hasMoreData ? 'pointer' : 'not-allowed', // 根据状态设置鼠标样式\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block', // 使其表现得像按钮\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: '10px 20px',\r\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'transparent', // 去掉背景色\r\n\t\t\t\t\t\t\t\t\t\t\tborder: 'none', // 去掉边框\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: '25px', // 设置文字大小\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loading\" />\r\n\t\t\t\t\t\t\t\t\t\t) : hasMoreData ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"loadMore\" />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage id=\"noMore\" />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\r\n\t\t\t\t\t{/* 模态框显示大图和属性 */}\r\n\t\t\t\t\t<Modal\r\n\t\t\t\t\t\ttitle={selectedNft ? selectedNft.name : \"\"}\r\n\t\t\t\t\t\topen={isModalVisible}\r\n\t\t\t\t\t\tonOk={() => isModalVisible(false)}\r\n\t\t\t\t\t\tonCancel={handleModalClose}\r\n\t\t\t\t\t\tfooter={null}\r\n\t\t\t\t\t\twidth={1000} // 设置模态框的宽度\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{selectedNft && (\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', color: '#01050B' }}>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tpreview={false}\r\n\t\t\t\t\t\t\t\t\talt={selectedNft.name}\r\n\t\t\t\t\t\t\t\t\tsrc={selectedNft.image_uri}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '300px', objectFit: 'contain', marginBottom: '20px' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ul style={{ listStyleType: 'none', padding: 0, textAlign: 'left', marginRight: '15%', fontSize: '18px', marginTop: '0', color: '#01050B' }}>\r\n\t\t\t\t\t\t\t\t\t{selectedNft.attributes_array.map((attr, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<li key={index} style={{ lineHeight: '1.6' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'inline-block', width: '120px' }}>{attr.trait_type}:</span> {attr.value}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</Layout >\r\n\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default NftList;"
        }
    ]
}